plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    group = 'com.example'
    version = '0.0.1-SNAPSHOT'

    java {
        sourceCompatibility = '21'
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-docker-compose'
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

        implementation 'org.postgresql:postgresql:42.7.3'
        implementation 'org.liquibase:liquibase-core:4.26.0'
        implementation 'com.github.blagerweij:liquibase-sessionlock:1.6.9'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
        testImplementation 'io.rest-assured:rest-assured:5.4.0'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    sourceSets {
        main {
            resources {
                srcDir 'src/main/resources'
                srcDir 'db'
            }
        }
    }

    tasks.withType(Copy).configureEach {
        duplicatesStrategy = DuplicatesStrategy.WARN
    }

    jacocoTestReport {
        reports {
            xml.required.set(true)
            html.required.set(true)
        }
    }
}